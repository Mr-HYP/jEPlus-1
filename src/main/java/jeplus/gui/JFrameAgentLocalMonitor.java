/***************************************************************************
 *   jEPlus - EnergyPlus shell for parametric studies                      *
 *   Copyright (C) 2010  Yi Zhang <yizhanguk@gmail.com>               *
 *                                                                         *
 *   This program is free software: you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation, either version 3 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 *   This program is distributed in the hope that it will be useful,       *
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of        *
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *
 *   GNU General Public License for more details.                          *
 *                                                                         *
 *   You should have received a copy of the GNU General Public License     *
 *   along with this program.  If not, see <http://www.gnu.org/licenses/>. *
 *                                                                         *
 ***************************************************************************
 *                                                                         *
 * Change log:                                                             *
 *                                                                         *
 *  - Created                                                              *
 *                                                                         *
 ***************************************************************************/
package jeplus.gui;

import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.Toolkit;
import javax.swing.JOptionPane;
import jeplus.agent.EPlusAgent;
import jeplus.agent.EPlusAgent.AgentState;

/**
 *
 * @author zyyz
 */
public class JFrameAgentLocalMonitor extends JFrameAgentMonitor {
    
    JPanel_ProgressBar ProgressBarPanel = null;
    JPanel_MemoryUsage MemoryUsagePanel = null;
    
    /**
     * Creates new form JFrameAgentLocalMonitor
     */
    public JFrameAgentLocalMonitor(EPlusAgent agent) {
        initComponents();
        Agent = agent;
        this.jplProgress.setLayout(new BorderLayout());
        ProgressBarPanel = new JPanel_ProgressBar (this);
        jplProgress.add(ProgressBarPanel, BorderLayout.CENTER);
        this.addWindowListener(ProgressBarPanel);
        this.jplResources.setLayout(new BorderLayout());
        String path = (Agent.getJobOwner() == null) ? "./" : Agent.getJobOwner().getResolvedEnv().getParentDir();
        MemoryUsagePanel = new JPanel_MemoryUsage (path);
        jplResources.add(MemoryUsagePanel, BorderLayout.CENTER);
        this.addWindowListener(MemoryUsagePanel);
        this.setTitle("Simulation Agent Local");
        Toolkit tk = Toolkit.getDefaultToolkit();
        Dimension screenSize = tk.getScreenSize();
        int frameWidth = 600;  
        int frameHeight = 530;  
        int screenHeight = screenSize.height;
        int screenWidth = screenSize.width;
        setSize(frameWidth, frameHeight);
        setLocation((screenWidth-frameWidth)/2,(screenHeight-frameHeight)/2);
    }

    @Override
    public void reset () {
        ProgressBarPanel.resetClock();
        cmdPause.setActionCommand("Pause");
        cmdPause.setText("Pause");
        cmdPause.setEnabled(true);
        cmdCancel.setText("Cancel");
        cmdCancel.setEnabled(true);
        // Agent.setState(EPlusAgent.AgentState.READY);
    }
    
    @Override
    public void setSimulationFinished () {
        cmdPause.setActionCommand("Pause");
        cmdPause.setText("Pause");
        cmdPause.setEnabled(false);
        cmdCancel.setText("Close");
        cmdCancel.setEnabled(true);
    }
    
    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of
     * this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jplProgress = new javax.swing.JPanel();
        jplResources = new javax.swing.JPanel();
        jplCommand = new javax.swing.JPanel();
        cmdCancel = new javax.swing.JButton();
        cmdPause = new javax.swing.JButton();

        jplProgress.setBorder(javax.swing.BorderFactory.createTitledBorder("Progress"));

        javax.swing.GroupLayout jplProgressLayout = new javax.swing.GroupLayout(jplProgress);
        jplProgress.setLayout(jplProgressLayout);
        jplProgressLayout.setHorizontalGroup(
            jplProgressLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jplProgressLayout.setVerticalGroup(
            jplProgressLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 87, Short.MAX_VALUE)
        );

        jplResources.setBorder(javax.swing.BorderFactory.createTitledBorder("Resources"));

        javax.swing.GroupLayout jplResourcesLayout = new javax.swing.GroupLayout(jplResources);
        jplResources.setLayout(jplResourcesLayout);
        jplResourcesLayout.setHorizontalGroup(
            jplResourcesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jplResourcesLayout.setVerticalGroup(
            jplResourcesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 227, Short.MAX_VALUE)
        );

        cmdCancel.setText("Cancel");
        cmdCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdCancelActionPerformed(evt);
            }
        });

        cmdPause.setText("Pause");
        cmdPause.setActionCommand("Pause\n");
        cmdPause.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdPauseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jplCommandLayout = new javax.swing.GroupLayout(jplCommand);
        jplCommand.setLayout(jplCommandLayout);
        jplCommandLayout.setHorizontalGroup(
            jplCommandLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jplCommandLayout.createSequentialGroup()
                .addContainerGap(459, Short.MAX_VALUE)
                .addComponent(cmdPause)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmdCancel)
                .addContainerGap())
        );
        jplCommandLayout.setVerticalGroup(
            jplCommandLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jplCommandLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jplCommandLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmdCancel)
                    .addComponent(cmdPause))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jplProgress, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jplResources, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jplCommand, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jplProgress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jplResources, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jplCommand, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmdPauseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdPauseActionPerformed
        if (cmdPause.getActionCommand().equals("Pause")) {
            cmdPause.setActionCommand("Resume");
            cmdPause.setText("Resume");
            if (Agent.getState() == EPlusAgent.AgentState.RUNNING) Agent.setState(EPlusAgent.AgentState.PAUSED);
        }else {
            cmdPause.setActionCommand("Pause");
            cmdPause.setText("Pause");
            if (Agent.getState() == EPlusAgent.AgentState.PAUSED) Agent.setState(EPlusAgent.AgentState.RUNNING);
        }
    }//GEN-LAST:event_cmdPauseActionPerformed

    private void cmdCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdCancelActionPerformed
        if (Agent.getState() == AgentState.PAUSED || Agent.getState() == AgentState.RUNNING) {
            int res = JOptionPane.showConfirmDialog(rootPane, "Do you want to cancel the current job batch?", "Confirm cancel action", JOptionPane.YES_NO_OPTION);
            if (res == JOptionPane.YES_OPTION) {
                Agent.setStopAgent(true);
                cmdCancel.setEnabled(false);
                cmdPause.setEnabled(false);
            }
        }else {
            this.setVisible(false);
        }
    }//GEN-LAST:event_cmdCancelActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cmdCancel;
    private javax.swing.JButton cmdPause;
    private javax.swing.JPanel jplCommand;
    private javax.swing.JPanel jplProgress;
    private javax.swing.JPanel jplResources;
    // End of variables declaration//GEN-END:variables
}
